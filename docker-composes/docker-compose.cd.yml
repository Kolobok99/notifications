version: '3.8'

volumes:
  postgres_data:
  static_volume:

networks:
  default:
    name: notifications_network

services:
  web:
    container_name: nots_web_container
    image: "${WEB_IMAGE}"
    command: bash -c "
      python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --no-input --clear
      && gunicorn core.wsgi:application --bind 0.0.0.0:8000 --reload
      "
    volumes:
      - static_volume:/web/static
    expose:
      - 8000
#    ports:
#      - "8000:8000"
    env_file:
      - ../backend/.env_files.prod/.env.prod.email
      - ../backend/.env_files.prod/.env.prod.settings
    depends_on:
      - db
    entrypoint: ./scripts/wait_db.sh


  db:
    container_name: nots_db_container
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ../backend/.env_files.prod/.env.prod.db


  redis:
    container_name: nots_redis_container
    image: redis:alpine
  celery:
    container_name: nots_celery_container
    restart: always
    image: "${CELERY_IMAGE}"
    command: celery -A conf worker -B -l info
    env_file:
      - ../backend/.env_files.prod/.env.prod.settings
      - ../backend/.env_files.prod/.env.prod.celery
#    volumes:
#      - ../backend/:/app/
    depends_on:
      - db
      - redis
      - web

  nginx:
    image: "${NGINX_IMAGE}"
    ports:
      - "80:80"
    volumes:
      - static_volume:/web/static
    depends_on:
      - web
    restart: always